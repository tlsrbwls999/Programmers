from collections import deque
def solution(maps):
    visited=[[False for _ in range(len(maps[0]))] for _ in range(len(maps))]
    graph=[[1 for _ in range(len(maps[0]))] for _ in range(len(maps))]
    dx=[0,0,-1,1]
    dy=[1,-1,0,0]
    q=[]
    q=deque([(0,0)])

    while q:
        a,b=q.popleft()
        visited[a][b]=True
        for i in range(4):
            nx=a+dx[i]
            ny=b+dy[i]
            if nx<0 or ny<0 or nx>=len(maps) or ny>=len(maps[0]):
                continue
            else:
                if maps[nx][ny]==1 and visited[nx][ny]==False:
                    graph[nx][ny]=graph[a][b]+1
                    visited[nx][ny]=True
                    q.append([nx,ny])
    if graph[len(maps)-1][len(maps[0])-1]==1:
        return -1
    else:
        return graph[len(maps)-1][len(maps[0])-1]
